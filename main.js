(()=>{"use strict";function e(e){e.classList.add("popup_is-opened"),document.addEventListener("keydown",n)}function t(e){e.classList.remove("popup_is-opened"),document.removeEventListener("keydown",n)}function n(e){"Escape"===e.key&&t(document.querySelector(".popup_is-opened"))}var r={baseURL:"https://nomoreparties.co/v1/wff-cohort-7",headers:{authorization:"37c27805-4486-40c8-98d8-f35c7d710efc","Content-type":"application/json"}},o=document.querySelector("#card-template").content,c=document.querySelector(".popup_type_delete"),a=c.querySelector(".popup__button");function u(e,t,n,r,c){var a=o.querySelector(".card").cloneNode(!0),u=a.querySelector(".card__image");u.src=e.link,u.alt="Фотография ".concat(e.name),u.addEventListener("click",n),a.querySelector(".card__title").textContent=e.name;var i=a.querySelector(".card__like-button"),l=a.querySelector(".card__likes-count");s(l,e.likes.length),i.addEventListener("click",(function(t){r(t,e._id,l)})),e.likes.find((function(e){return e._id===t}))&&i.classList.add("card__like-button_is-active");var d=a.querySelector(".card__delete-button");return e.owner._id!==t?d.style.display="none":d.addEventListener("click",(function(){return c(e._id,a)})),a}function i(e,t,n){e.target.classList.contains("card__like-button_is-active")?function(e){return fetch("".concat(r.baseURL,"/cards/likes/").concat(e),{method:"DELETE",headers:r.headers}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка при дизлайке карточки: ".concat(e.status))})).catch((function(e){return console.log(e)}))}(t).then((function(t){s(n,t.likes.length),e.target.classList.remove("card__like-button_is-active")})):function(e){return fetch("".concat(r.baseURL,"/cards/likes/").concat(e),{method:"PUT",headers:r.headers}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка при лайке карточки: ".concat(e.status))})).catch((function(e){return console.log(e)}))}(t).then((function(t){s(n,t.likes.length),e.target.classList.add("card__like-button_is-active")}))}function s(e,t){e.textContent=t}function l(n,o){e(c),a.addEventListener("click",(function e(){(function(e){return fetch("".concat(r.baseURL,"/cards/").concat(e),{method:"DELETE",headers:r.headers}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка при удалении карточки пользователя: ".concat(e.status))})).catch((function(e){return console.log(e)}))})(n).then((function(){t(c),o.remove(),a.removeEventListener("click",e)})).catch((function(e){return console.log(e)}))}))}var d,f={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_is-inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_is-active"};function p(e,t){var n=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(f.inputErrorClass),n.classList.remove(f.errorClass),n.textContent=""}function m(e,t){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?t.classList.remove(f.inactiveButtonClass):t.classList.add(f.inactiveButtonClass)}function _(e){var t=Array.from(e.querySelectorAll(f.inputSelector)),n=e.querySelector(f.submitButtonSelector);m(t,n),t.forEach((function(r){r.addEventListener("input",(function(){(function(e,t){t.validity.patternMismatch?t.setCustomValidity(t.dataset.errorMessage):t.setCustomValidity(""),t.validity.valid?p(e,t):function(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.add(f.inputErrorClass),r.textContent=n,r.classList.add(f.errorClass)}(e,t,t.validationMessage)})(e,r),m(t,n)}))}))}function y(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var v,h,S=document.querySelector(".places__list"),b=document.querySelectorAll(".popup"),L=document.querySelector(".popup_type_edit"),g=document.querySelector(".popup_type_avatar"),k=document.querySelector(".profile__edit-button"),q=document.querySelector(".popup_type_new-card"),E=document.querySelector(".profile__add-button"),C=document.querySelector(".popup_type_image"),j=C.querySelector(".popup__image"),A=C.querySelector(".popup__caption"),P=document.querySelector(".profile__title"),x=document.querySelector(".profile__description"),w=document.querySelector(".profile__image"),U=document.forms["edit-profile"],R=U.elements.name,B=U.elements.description,O=document.forms["edit-avatar"],T=O.elements.link,D=document.forms["new-place"],I=D.elements["place-name"],M=D.elements.link;function N(e,t){t.textContent=e?"Сохранение...":"Сохранить"}function J(e){P.textContent=e.name,x.textContent=e.about,w.style.backgroundImage="url(".concat(e.avatar,")")}function H(t){var n=t.target,r=n.closest(".card").querySelector(".card__title");e(C),j.src=n.src,j.alt=n.alt,A.textContent=r.textContent}k.addEventListener("click",(function(){var t,n;t=P.textContent,n=x.textContent,R.value=t,B.value=n,function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector));m(n,e.querySelector(t.submitButtonSelector)),n.forEach((function(t){return p(e,t)}))}(U,f),e(L)})),w.addEventListener("click",(function(){return e(g)})),U.addEventListener("submit",(function(e){e.preventDefault();var n,o=U.querySelector(".popup__button"),c={name:R.value,about:B.value};N(!0,o),(n=c,fetch("".concat(r.baseURL,"/users/me"),{method:"PATCH",headers:r.headers,body:JSON.stringify(n)}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка при обновлении информации о пользователе: ".concat(e.status))})).catch((function(e){return console.log(e)}))).then((function(e){J(e),t(L)})).catch((function(e){return console.log(e)})).finally((function(){return N(!1,o)}))})),O.addEventListener("submit",(function(e){e.preventDefault();var n,o=O.querySelector(".popup__button");N(!0,o),(n=T.value,fetch("".concat(r.baseURL,"/users/me/avatar"),{method:"PATCH",headers:r.headers,body:JSON.stringify({avatar:n})}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка при обновлении аватарки пользователя: ".concat(e.status))})).catch((function(e){return console.log(e)}))).then((function(e){J(e),t(g),O.reset()})).catch((function(e){return console.log(e)})).finally((function(){return N(!1,o)}))})),E.addEventListener("click",(function(){return e(q)})),D.addEventListener("submit",(function(e){e.preventDefault();var n,o=D.querySelector(".popup__button"),c={name:I.value,link:M.value};N(!0,o),(n=c,fetch("".concat(r.baseURL,"/cards"),{method:"POST",headers:r.headers,body:JSON.stringify(n)}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка при добавлении новой карточки: ".concat(e.status))})).catch((function(e){return console.log(e)}))).then((function(e){S.prepend(u(e,d,H,i,l)),D.reset(),t(q),D.querySelector(f.submitButtonSelector).classList.add(f.inactiveButtonClass)})).catch((function(e){return console.log(e)})).finally((function(){return N(!1,o)}))})),b.forEach((function(e){e.addEventListener("mousedown",(function(n){n.target.classList.contains("popup__close")&&t(e),n.target.classList.contains("popup_is-opened")&&t(e)}))})),v=fetch("".concat(r.baseURL,"/users/me"),{headers:r.headers}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка при запросе информации о пользователе: ".concat(e.status))})).catch((function(e){return console.log(e)})),h=fetch("".concat(r.baseURL,"/cards"),{headers:r.headers}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка при запросе списка карточек: ".concat(e.status))})).catch((function(e){return console.log(e)})),Promise.all([v,h]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,c,a,u=[],i=!0,s=!1;try{if(c=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(r=c.call(n)).done)&&(u.push(r.value),u.length!==t);i=!0);}catch(e){s=!0,o=e}finally{try{if(!i&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(t,n)||function(e,t){if(e){if("string"==typeof e)return y(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?y(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],c=r[1];d=o._id,J(o),function(e){e.forEach((function(e){S.append(u(e,d,H,i,l))}))}(c)})).catch((function(e){return console.log(e)})),function(e){Array.from(document.querySelectorAll(e.formSelector)).forEach((function(e){e.addEventListener("submit",(function(e){e.preventDefault()})),_(e)}))}(f)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,